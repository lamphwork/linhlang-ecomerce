services:
  redis:
    image: redis:7.4.1
    ports:
      - '6379:6379'
  database:
    image: mysql:8.0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 20s
      retries: 5
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: product
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql_init_scripts:/docker-entrypoint-initdb.d
  minio:
    image: quay.io/minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: 123456a@
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
  product-service:
    restart: unless-stopped
    build:
      context: .
      dockerfile: product/Dockerfile
    env_file:
      - product/.env
    ports:
      - 8081:8080
    depends_on:
      database:
        condition: service_healthy
  webconfig-service:
    restart: unless-stopped
    build:
      context: .
      dockerfile: webconfig/Dockerfile
    env_file:
      - webconfig/.env
    ports:
      - 8082:8080
    depends_on:
      database:
        condition: service_healthy
  auth-service:
    restart: unless-stopped
    build:
      context: .
      dockerfile: auth/Dockerfile
    env_file:
      - auth/.env
    ports:
      - 8083:8080
    depends_on:
      - database
volumes:
  mysql_data:
  minio_data: